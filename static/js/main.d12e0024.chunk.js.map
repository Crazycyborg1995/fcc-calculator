{"version":3,"sources":["App.js","components/Numbers.js","components/Operators.js","components/Equals.js","components/Clear.js","components/Display.js","serviceWorker.js","index.js"],"names":["App","state","total","number","nums","id","value","ops","op","insertNumber","num","_this","regex","RegExp","setState","test","insertOps","replace","insertDecimal","regex2","match","equaliser","result","eval","toString","length","toFixed","clearDisplay","_this2","this","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_src_components_Display__WEBPACK_IMPORTED_MODULE_10__","_src_components_Clear__WEBPACK_IMPORTED_MODULE_9__","map","index","_src_components_Numbers__WEBPACK_IMPORTED_MODULE_6__","key","_src_components_Operators__WEBPACK_IMPORTED_MODULE_7__","_src_components_Equals__WEBPACK_IMPORTED_MODULE_8__","Component","Numbers","handleNumber","e","currentTarget","getAttribute","props","data","onClick","Operators","_Component","_getPrototypeOf2","Object","c_Users_afsal_Desktop_Web_Dev_FCC_Front_End_Frameworks_calculator_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_len","arguments","args","Array","_key","c_Users_afsal_Desktop_Web_Dev_FCC_Front_End_Frameworks_calculator_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","c_Users_afsal_Desktop_Web_Dev_FCC_Front_End_Frameworks_calculator_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","apply","concat","handleOps","c_Users_afsal_Desktop_Web_Dev_FCC_Front_End_Frameworks_calculator_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","c_Users_afsal_Desktop_Web_Dev_FCC_Front_End_Frameworks_calculator_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","Equals","Clear","Display","className","Boolean","window","location","hostname","ReactDOM","render","react_default","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d12e0024.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Numbers from '../src/components/Numbers';\nimport Operators from '../src/components/Operators';\nimport Equals from '../src/components/Equals';\nimport Clear from '../src/components/Clear';\nimport Display from '../src/components/Display';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    total: '0',\n    number : '',\n    nums: [\n      {\n        id:'zero',\n        value:0\n      }\n      ,{\n        id:'one',\n        value:1\n      }\n      ,{\n        id:'two',\n        value:2\n      }\n      ,{\n        id:'three',\n        value:3\n      }\n      ,{\n        id:'four',\n        value:4\n      }\n      ,{\n        id:'five',\n        value:5\n      }\n      ,{\n        id:'six',\n        value:6\n      }\n      ,{\n        id:'seven',\n        value:7\n      }\n      ,{\n        id:'eight',\n        value:8\n      }\n      ,{\n        id:'nine',\n        value:9\n      }\n      ,{\n        id:'decimal',\n        value: '.'\n      }],\n   \n   ops: [{\n      id:'add',\n      op: '+'\n    },\n    {\n      id:'subtract',\n      op: '-'\n    },\n    {\n      id:'multiply',\n      op: '*'\n    },\n    {\n      id:'divide',\n      op: '/'\n    }]\n  }\n\n// Insert a Number\n  insertNumber = num => {\n    const number = this.state.number;\n    const total = this.state.total;\n    let regex =new RegExp(/(\\+|\\-|\\*|\\/)+$/g);\n   if(total === '0'){\n        this.setState({\n          total: num,\n          number: num\n      })\n    }\n    else if(regex.test(total)){\n      this.setState({\n        total: total + num,\n        number : num\n      })\n    }\n       else {\n          this.setState({\n            total: total + num,\n            number: number + num\n          })\n        }\n    }\n   \n// Insert an operation \n  insertOps = ops => {\n    let regex =new RegExp(/(\\+|\\-|\\*|\\/)+$/g);\n    const number = this.state.number;\n    const total = this.state.total;\n    if(total === ''){\n      return false;\n    }\n    else if(regex.test(number)){\n      this.setState({\n        total: total.replace(regex,ops),\n        number:number + ops\n      })\n    }\n    else{\n      this.setState({\n        number: ops,\n        total:total + ops\n      })\n    }\n  }\n\n// Insert a decimal\n  insertDecimal = value => {\n    let regex = new RegExp(/(\\.$)/g);\n    const number = this.state.number;\n    const total = this.state.total;  \n    let regex2 = new RegExp(/(\\d)(?=\\.)/);\n    if(!regex.test(total) &&  number.match(regex2) === null){\n      this.setState({\n        total:total + '.',\n        number: number + '.'\n      })\n    }\n  }\n\n//  Evaluate the expression\n  equaliser = () => {\n    const total = this.state.total;\n    let result = eval(total);\n    if(result.toString().length > 10){\n    result = result.toFixed(10);\n    }\n    if(total !== '0'){\n      this.setState({\n        total:result,\n        number:result\n      })\n    }\n    \n  }\n\n// Clear the display\n  clearDisplay = () => {\n    this.setState({\n      total:'0',\n      number: ''\n    })\n  }\n\n  render() {\n    return (\n      <div id=\"container\">\n        <Display result={this.state}/>\n        <div id=\"pad\">\n          <Clear clearDisplay={this.clearDisplay}/>\n          {this.state.nums.map( (num,index) => <Numbers insertDecimal={this.insertDecimal} insertNumber={this.insertNumber} num={num} key={index}/> )} \n          {/* {no curly braces} */}\n        {this.state.ops.map((op,index) => <Operators ops={op}  insertOps={this.insertOps} key={index}/>)}\n        <Equals equaliser={this.equaliser}/>\n        </div> \n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react'\r\n\r\nclass Numbers extends Component {\r\n  handleNumber = e => {\r\n    let value = e.currentTarget.getAttribute(\"data\");\r\n    if(value !== '.'){\r\n     return this.props.insertNumber(value);\r\n    }\r\n    this.props.insertDecimal(value)\r\n  }\r\n  render() {\r\n    return (\r\n      <div id={this.props.num.id} data={this.props.num.value} onClick={this.handleNumber}>\r\n        {this.props.num.value}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Numbers\r\n","import React, { Component } from 'react'\r\n\r\nexport class Operators extends Component {\r\n  handleOps = e => {\r\n    this.props.insertOps(e.currentTarget.getAttribute(\"data\"))\r\n  }\r\n  render() {\r\n    return (\r\n      <div id={this.props.ops.id} data={this.props.ops.op} onClick={this.handleOps}>\r\n        {this.props.ops.op}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Operators\r\n","import React, { Component } from 'react'\r\n\r\nclass Equals extends Component {\r\n  \r\n  render() {\r\n    return (\r\n      <div id=\"equals\" onClick={this.props.equaliser}>\r\n        =\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Equals\r\n","import React, { Component } from 'react'\r\n\r\nclass Clear extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"clear\" onClick={this.props.clearDisplay}>\r\n        AC\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Clear\r\n","import React, { Component } from 'react'\r\n\r\nclass Display extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"display\">\r\n        <h4 id=\"display\">{this.props.result.total}</h4>\r\n        <h1>{this.props.result.number}</h1>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Display\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}